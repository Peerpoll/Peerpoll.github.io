<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://peerpoll.github.io/</id>
    <title>Peer&apos;s blog</title>
    <updated>2019-07-01T13:05:58.940Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://peerpoll.github.io/"/>
    <link rel="self" href="https://peerpoll.github.io//atom.xml"/>
    <subtitle>书写博客加强学习</subtitle>
    <logo>https://peerpoll.github.io//images/avatar.png</logo>
    <icon>https://peerpoll.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, Peer&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[网页版blast构建]]></title>
        <id>https://peerpoll.github.io//post/wang-ye-ban-blast-gou-jian</id>
        <link href="https://peerpoll.github.io//post/wang-ye-ban-blast-gou-jian">
        </link>
        <updated>2019-07-01T12:44:45.000Z</updated>
        <content type="html"><![CDATA[<h5 id="因为构建网站功能需要搭建一个blast功能主要是利用了ncbi提供的blast进行构建-主要工作如下">因为构建网站功能需要搭建一个blast功能，主要是利用了NCBI提供的blast+进行构建。主要工作如下：</h5>
<h4 id="1下载blast">1.下载blast+</h4>
<h4 id="blast工具"><a href="ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/">blast+工具</a> 下载所需要的版本</h4>
<h4 id="2根据需要的参数设置网页的界面">2.根据需要的参数设置网页的界面</h4>
<h4 id="相关的参数详情">相关的参数详情：</h4>
<p>序列输入  =》 -query (file_in) 输入你要查找的序列，将上传的序列文件名放进去，最好是绝对路径
查询范围  =》 -query_loc (n-x) 需要查找的位置（start-stop） ps:start/stop输入是数字型
查询类型  =》 -task (string) 选择查询的类型，blastn下有好几种类型&quot;blastn&quot;,&quot;blastn-short&quot;,&quot;megablast&quot;各有优缺
保留阈值  =》 -evalue 保留匹配的阈值，自己设定，一般默认是10
匹配长度  =》 -word_size (integer,&gt;=4) 设置最佳匹配长度
匹配得分  =》 -reward (int,&gt;=0) 匹配上的得分
错配罚分  =》 -penalty (int,&gt;=0) 错配的罚分
open gap  =》 -gapopen(int) open gap 分数
extend gap =》 -gapextend(int) extend gap分数
筛选    =》 -dust(str) &quot;yes&quot;or&quot;no&quot; 筛选低复杂区域
结果输出  =》 -outfmt 输出结果格式；我用的是 -6 用&quot;\t&quot;格式分割  -7 用&quot;\t&quot;分割，包含注释；输出还有一些列格式，没怎么用到，所以不赘述
-6 输出一般是12列
Queryid（查询id）　　Subject id（比对上的id） 　　identity（配对一致性%）　　alignment length(比对上的区域长度)　　mismatches(错配数)
gap open　　q.start（匹配上的查询序列起点）　　q.end（匹配上查询序列终点）　　s.start(匹配上目标序列的起点)　　s.end(匹配上目标序列的终点)       e-value　　bitscore(比对上的的得分)</p>
<h4 id="创建自己的基因库">创建自己的基因库</h4>
<blockquote>
<p>载入自己的需要的fa数据作为库 blastn 只要nucl库
命令：makeblastdb.exe -in 基因组genomic.fna -parse_seqids -hash_index -dbtype nucl -out 自定义库名</p>
</blockquote>
<h4 id="利用脚本对上传的数据进行处理">利用脚本对上传的数据进行处理</h4>
<p><strong>我使用的是python脚本，linux上可以直接运行命令</strong></p>
<pre><code>&quot;&quot;&quot;blastn -query %s  -db %s -out %s -task %s -evalue %d -word_size %d -reward %d -penalty %d -gapopen %d -gapextend %d -dust %s -outfmt 6 &quot;&quot;&quot;%(inname,db,outname,task,evalue,word_size,reward,penalty,gapopen,gapextend,dust)
</code></pre>
<h4 id="对获取的结果可以进行美化可以使用blasterjs对结果展示惊醒美化">对获取的结果可以进行美化，可以使用blasterJS对结果展示惊醒美化</h4>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[申明]]></title>
        <id>https://peerpoll.github.io//post/shen-ming</id>
        <link href="https://peerpoll.github.io//post/shen-ming">
        </link>
        <updated>2019-07-01T12:36:12.000Z</updated>
        <content type="html"><![CDATA[<h2 id="将之前的博客园中的文章转到这边以后主要在这个博客上进行更新">将之前的博客园中的文章转到这边，以后主要在这个博客上进行更新</h2>
]]></content>
    </entry>
</feed>